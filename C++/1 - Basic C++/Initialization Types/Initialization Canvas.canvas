{
	"nodes":[
		{"id":"e595092dafdb1515","x":-1000,"y":-120,"width":965,"height":980,"type":"text","text":"## ‚úÖ **C++ Initialization Forms Cheat Sheet**\n\n| Syntax            | Name                              | Uses `explicit` ctor? | Notes                                                 |\n| ----------------- | --------------------------------- | --------------------- | ----------------------------------------------------- |\n| `T obj(arg);`     | **Direct initialization**         | ‚úÖ Yes                 | Calls constructor directly                            |\n| `T obj = arg;`    | **Copy initialization**           | ‚ùå No                  | Converts `arg` then calls ctor                        |\n| `T obj{arg};`     | **Direct-list-init**              | ‚úÖ Yes (C++11+)        | Safer, no narrowing                                   |\n| `T obj = {arg};`  | **Copy-list-init**                | ‚ùå No                  | Like copy init but with `{}`                          |\n| `T obj;`          | **Default initialization**        | ‚úÖ Yes                 | Calls default constructor or leaves POD uninitialized |\n| `T obj = T(arg);` | **Copy elision/init from rvalue** | ‚ùå No                  | Similar to copy init                                  |\n\n---\n\n## üìå Examples\n\n```cpp\nstruct A {\n    explicit A(int x) {}\n    A() {}\n};\n\n// ‚úÖ Direct init\nA a1(10);          // OK: explicit allowed\nA a2{10};          // OK: direct-list-init, explicit allowed\n\n// ‚ùå Copy init\nA a3 = 10;         // Error: explicit constructor not allowed\nA a4 = {10};       // Error: explicit constructor not allowed\n\n// ‚úÖ Default init\nA a5;              // OK: default constructor\n\n// ‚úÖ Rvalue-based (still copy init)\nA a6 = A(10);      // Error: still copy init, so explicit not allowed\n```\n\n---\n\n## üîç Bonus Tip: Use `auto` with care\n\n```cpp\nauto x = A(10);    // ‚úÖ Direct init of temporary, but copy init into `x` ‚Üí ‚ùå if ctor is explicit\n```\n\nUse **`auto x(A(10));`** instead if you want true direct initialization of `x`."}
	],
	"edges":[]
}